Alice randomly generates 2 prime numbers ~same size
Multiplies them (n = p*q is over 300 digits long)
Alice hides prime factorization to n (p*q)

phi(n) := # of integers <= n that dont share any common factor with n
Calculating phi is hard, except for prime numbers b/c no factors > 1
	phi(prime) = prime - 1
	phi(21377) = 21376
phi(a*b) = phi(a)*phi(b)
phi(n) = phi(p)*phi(q) = (p-1)(q-1)

m^phi(n) mod n = 1

m^(k*phi(n) + 1) = m mod n
m^(e*d) = m mod n
Easy to find d ONLY IF factorization of n is known:
	d = (k*phi(n) + 1)/e

EXAMPLE:

p1 = 53
p2 = 59
n = 53*59 = 3127
phi(n) = 52*58 = 3016
e = 3 (public exponent randomly chosen which MUST BE AN ODD NUMBER WHICH CAN'T SHARE A FACTOR WITH PHI(N))
Finds value of private exponent d = (2*(3016)+1)/3 = 2011
Hides everything except n and e, which make up public key
Bob locks message by message^e mod n = 89^3 mod 3127 = 1394
Alice unlocks by c^d mod n = message
